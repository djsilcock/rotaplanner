import {
  dev_exports as dev_exports2
} from "./chunk-KQKAS2DG.js";
import {
  DEV as DEV2,
  dev_exports as dev_exports3,
  unwrap
} from "./chunk-T5FTXIQW.js";
import {
  $PROXY,
  DEV,
  createRoot,
  dev_exports,
  getListener,
  getOwner,
  onCleanup,
  untrack
} from "./chunk-FS7PXP3C.js";
import "./chunk-RT7CDYDI.js";

// .yarn/__virtual__/@solid-devtools-shared-virtual-32973a9c5f/5/AppData/Local/Yarn/Berry/cache/@solid-devtools-shared-npm-0.13.2-6568755519-10c0.zip/node_modules/@solid-devtools/shared/dist/chunk/AJRIPJTI.js
var getLogLabel = () => [
  `%csolid-devtools`,
  "color: #fff; background: #2c4f7c; padding: 1px 4px;"
];
function error(...args) {
  console.error(...getLogLabel(), ...args);
  return;
}

// .yarn/__virtual__/@solid-devtools-debugger-virtual-7c57020c6f/5/AppData/Local/Yarn/Berry/cache/@solid-devtools-debugger-npm-0.23.4-43fa88b08b-10c0.zip/node_modules/@solid-devtools/debugger/dist/setup.js
var OwnerLocationMap = /* @__PURE__ */ new WeakMap();
function setOwnerLocation(location) {
  const owner = getOwner();
  owner && OwnerLocationMap.set(owner, location);
}
function getOwnerLocation(owner) {
  return OwnerLocationMap.get(owner) ?? null;
}
var PassedLocatorOptions = null;
function useLocator(options) {
  PassedLocatorOptions = options;
}
var ClientVersion = null;
var SolidVersion = null;
var ExpectedSolidVersion = null;
function setClientVersion(version) {
  ClientVersion = version;
}
function setSolidVersion(version, expected) {
  SolidVersion = version;
  ExpectedSolidVersion = expected;
}
var DevEvents = [];
if (window.SolidDevtools$$) {
  error("Debugger is already setup");
}
if (!DEV || !DEV2) {
  error("SolidJS in not in development mode!");
} else {
  window.SolidDevtools$$ = {
    Solid: dev_exports,
    Store: dev_exports3,
    Web: dev_exports2,
    DEV,
    getOwner,
    createRoot,
    getListener,
    onCleanup,
    $PROXY,
    untrack,
    STORE_DEV: DEV2,
    unwrap,
    getDevEvents() {
      const events = DevEvents ?? [];
      DevEvents = null;
      return events;
    },
    get locatorOptions() {
      return PassedLocatorOptions;
    },
    versions: {
      get client() {
        return ClientVersion;
      },
      get solid() {
        return SolidVersion;
      },
      get expectedSolid() {
        return ExpectedSolidVersion;
      }
    },
    getOwnerLocation
  };
  DEV.hooks.afterCreateOwner = function(owner) {
    if (!DevEvents)
      return;
    DevEvents.push({
      timestamp: Date.now(),
      type: "RootCreated",
      data: owner
    });
  };
}

// .yarn/__virtual__/solid-devtools-virtual-2d4742ccff/5/AppData/Local/Yarn/Berry/cache/solid-devtools-npm-0.30.1-2029e40f68-10c0.zip/node_modules/solid-devtools/dist/chunk-M3II3NUF.js
setClientVersion("0.30.1");
setSolidVersion("1.8.5", "1.8.0");
function setComponentLocation(location) {
  if (typeof location !== "string")
    return;
  setOwnerLocation(location);
}
export {
  setComponentLocation,
  useLocator as setLocatorOptions
};
//# sourceMappingURL=solid-devtools_setup.js.map
