directive @oneOf on INPUT_OBJECT

type Activity implements Node {
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  type: String!
  templateId: String!
  recurrenceRules: String!
  requirements: String!
  activityStart: String!
  activityFinish: String!
  timeslots: [TimeSlot!]!
  location: Location
  assignments: [StaffAssignment!]!
}

input ActivityInput {
  id: ID
  templateId: ID
  name: String
  locationId: ID
  recurrenceRules: RecurrenceGroup
  requirements: [RequirementInput!]
  timeslots: [TimeSlotInput!]
}

type AssignmentFlags {
  id: ID!
  name: String!
}

input DailyRecurrenceInput {
  interval: Int!
}

type DateRange {
  start: String!
  end: String!
}

type Location implements Node {
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  activities(start: String! = "1970-01-01", end: String! = "2100-01-01"): [Activity!]!
}

input MonthlyRecurrenceInput {
  interval: Int!
  dayInMonth: Int!
}

type Mutation {
  changeStaffAssignment(staffId: ID, timeslot: TimeSlotInput!, change: NewStaffAssignmentInput!): [String!]!
  editActivity(activity: ActivityInput!): Void
  moveActivity(activityId: String!, fromRow: String!, toRow: String!, rowType: RowType!): Activity
}

input NewStaffAssignmentInput {
  timeslot: TimeSlotInput
  staff: ID
  tags: [String!]
  attendance: Int
}

"""An object with a Globally Unique ID"""
interface Node {
  """The Globally Unique ID of this object"""
  id: ID!
}

type Query {
  node(
    """The ID of the object."""
    id: ID!
  ): Node!
  hello(value: String): String!
  activities(startDate: String! = "1970-01-01", endDate: String! = "2199-12-31", locationId: ID, staffId: ID): [Activity!]!
  locations: [Location!]!
  staff: [Staff!]!
  daterange: DateRange!
}

input RecurrenceGroup @oneOf {
  allOf: [RecurrenceRule!]!
  anyOf: [RecurrenceRule!]!
  noneOf: [RecurrenceRule!]!
}

input RecurrenceRule @oneOf {
  group: RecurrenceGroup
  daily: DailyRecurrenceInput
  weekly: WeeklyRecurrenceInput
  monthly: MonthlyRecurrenceInput
  weekInMonth: WeekInMonthRecurrenceInput
}

input RequirementInput {
  requirementId: ID!
  attendance: Int!
  minimum: Int!
  maximum: Int!
}

enum RowType {
  staff
  location
}

type Staff implements Node {
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  assignments(start: String! = "1970-01-01", end: String! = "2100-01-01"): [StaffAssignment!]!
}

type StaffAssignment {
  staff: Staff!
  timeslot: TimeSlot!
  flags: [AssignmentFlags!]!
}

type TimeSlot {
  start: String!
  finish: String!
  activity: Activity!
  assignments: [StaffAssignment!]!
}

input TimeSlotInput {
  activityId: String!
  startTime: String!
}

"""Represents NULL values"""
scalar Void

input WeekInMonthRecurrenceInput {
  interval: Int!
  weekday: Int!
  weekNo: Int!
}

input WeeklyRecurrenceInput {
  interval: Int!
  weekday: Int!
}