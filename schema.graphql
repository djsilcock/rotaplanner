directive @oneOf on INPUT_OBJECT

type Activity {
  id: ID!
  name: String!
  timeslots: [TimeSlot!]!
}

input ActivityInput {
  id: ID
  templateId: ID
  name: String
  locationId: ID
  recurrenceRules: RecurrenceGroup
  requirements: [RequirementInput!]
  timeslots: [TimeSlotInput!]
}

type AssignmentFlags {
  id: ID!
  name: String!
}

input DailyRecurrenceInput {
  interval: Int!
}

type DateRange {
  start: String!
  end: String!
}

type Location {
  id: ID!
  name: String!
}

input MonthlyRecurrenceInput {
  interval: Int!
  dayInMonth: Int!
}

type Mutation {
  changeStaffAssignment(staffId: ID, timeslot: TimeSlotInput!, change: NewStaffAssignmentInput!): [String!]!
  editActivity(activity: ActivityInput!): Void
}

input NewStaffAssignmentInput {
  timeslot: TimeSlotInput
  staff: ID
  tags: [String!]
  attendance: Int
}

type Query {
  activities(startDate: String! = "1970-01-01", endDate: String! = "2199-12-31"): [Activity!]!
  allLocations: [Location!]!
  allStaff: [Staff!]!
  locationById(id: ID!): Location!
  staffById(id: ID!): Staff!
  activityById(id: ID!): Activity!
  daterange: DateRange!
}

input RecurrenceGroup @oneOf {
  allOf: [RecurrenceRule!]!
  anyOf: [RecurrenceRule!]!
  noneOf: [RecurrenceRule!]!
}

input RecurrenceRule @oneOf {
  group: RecurrenceGroup
  daily: DailyRecurrenceInput
  weekly: WeeklyRecurrenceInput
  monthly: MonthlyRecurrenceInput
  weekInMonth: WeekInMonthRecurrenceInput
}

input RequirementInput {
  requirementId: ID!
  attendance: Int!
  minimum: Int!
  maximum: Int!
}

type Staff {
  id: ID!
  name: String!
  assignments(start: String! = "1970-01-01", end: String! = "2100-01-01"): [StaffAssignment!]!
}

type StaffAssignment {
  staff: Staff!
  timeslot: TimeSlot!
  flags: [AssignmentFlags!]!
}

type TimeSlot {
  start: String!
  end: String!
  activity: Activity!
  staffAssigned: [StaffAssignment!]!
}

input TimeSlotInput {
  activityId: String!
  startTime: String!
}

"""Represents NULL values"""
scalar Void

input WeekInMonthRecurrenceInput {
  interval: Int!
  weekday: Int!
  weekNo: Int!
}

input WeeklyRecurrenceInput {
  interval: Int!
  weekday: Int!
}