// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { ActivitiesByDateData, ActivitiesByDateResponse2, ActivitiesByDateError, MoveActivityInStaffGridData, MoveActivityInStaffGridResponse, MoveActivityInStaffGridError, MoveActivityInLocationGridData, MoveActivityInLocationGridResponse, MoveActivityInLocationGridError, ReallocateStaffToActivityData, ReallocateStaffToActivityResponse, ReallocateStaffToActivityError, GetActivityTemplatesData, GetActivityTemplatesResponse, GetActivityTemplateData, GetActivityTemplateResponse, GetActivityTemplateError, UpdateActivityTemplateData, UpdateActivityTemplateError, TableConfigData, TableConfigResponse, TableConfigError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
};

/**
 * Table By Date
 */
export const activitiesByDate = <ThrowOnError extends boolean = false>(options?: Options<ActivitiesByDateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ActivitiesByDateResponse2, ActivitiesByDateError, ThrowOnError>({
        url: '/api/activities/by_date',
        ...options
    });
};

/**
 * Move Activity In Staff Grid
 */
export const moveActivityInStaffGrid = <ThrowOnError extends boolean = false>(options: Options<MoveActivityInStaffGridData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<MoveActivityInStaffGridResponse, MoveActivityInStaffGridError, ThrowOnError>({
        url: '/api/move_activity_in_staff_grid',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Move Activity In Location Grid
 */
export const moveActivityInLocationGrid = <ThrowOnError extends boolean = false>(options: Options<MoveActivityInLocationGridData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<MoveActivityInLocationGridResponse, MoveActivityInLocationGridError, ThrowOnError>({
        url: '/api/move_activity_in_location_grid',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Reallocate Staff To Activity
 */
export const reallocateStaffToActivity = <ThrowOnError extends boolean = false>(options: Options<ReallocateStaffToActivityData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ReallocateStaffToActivityResponse, ReallocateStaffToActivityError, ThrowOnError>({
        url: '/api/reallocate_staff_to_activity',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Activity Templates
 */
export const getActivityTemplates = <ThrowOnError extends boolean = false>(options?: Options<GetActivityTemplatesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetActivityTemplatesResponse, unknown, ThrowOnError>({
        url: '/api/activity_templates',
        ...options
    });
};

/**
 * Activity Template
 */
export const getActivityTemplate = <ThrowOnError extends boolean = false>(options: Options<GetActivityTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetActivityTemplateResponse, GetActivityTemplateError, ThrowOnError>({
        url: '/api/activity_template/{activity_id}',
        ...options
    });
};

/**
 * Update Activity Template
 */
export const updateActivityTemplate = <ThrowOnError extends boolean = false>(options: Options<UpdateActivityTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, UpdateActivityTemplateError, ThrowOnError>({
        url: '/api/activity_template/{activity_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Rota Grid
 * Row and column headings for the rota grid
 */
export const tableConfig = <ThrowOnError extends boolean = false>(options: Options<TableConfigData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<TableConfigResponse, TableConfigError, ThrowOnError>({
        url: '/api/config/rota-grid/{location_or_staff}',
        ...options
    });
};